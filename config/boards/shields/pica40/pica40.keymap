#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define QWERTY 0
#define GAME 1
#define NAV 2
#define NUM 3
#define SYM 4
#define FUNC 5

/ {

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        // Easy alt-tab with alt+backspace thumb using mod-morphs
        bstab: backspace_tab {
            compatible = "zmk,behavior-mod-morph";
            label = "BSPC_TAB";
            #binding-cells = <0>;
            bindings = <&kp BSPC>, <&kp TAB>;
            mods = <MOD_LALT>;
        };
        lt_bspc: layer_tap_backspace_tab {
            compatible = "zmk,behavior-hold-tap";
            label = "LT_BT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            bindings = <&mo>, <&bstab>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_caps {
            timeout-ms = <50>;
            key-positions = <14 17>;
            layers = <0>;
            bindings = <&caps_word>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                           &kp Q       &kp W       &kp E        &kp R        &kp T        &kp Y  &kp U        &kp I        &kp O       &kp P
                &kp EQUAL  &ht LGUI A  &ht LALT S  &ht LCTRL D  &ht LSHFT F  &kp G        &kp H  &ht RSHFT J  &ht RCTRL K  &ht LALT L  &ht RGUI SEMI  &kp SQT
                &kp MINUS  &kp Z       &kp X       &kp C        &kp V        &kp B        &kp N  &kp M        &kp COMMA    &kp DOT     &kp FSLH       &kp GRAVE
                                            &lt FUNC ESC  &lt NUM TAB  &lt SYM SPACE    &lt FUNC ENTER  &lt NAV BSPC  &lt RALT DEL
                >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        game_layer {
            bindings = <
                                 &kp Q   &kp W  &kp E  &kp R  &kp T        &kp Y  &kp U  &kp I      &kp O    &kp P
                &ht LALT EQUAL   &kp A   &kp S  &kp D  &kp F  &kp G        &kp H  &kp J  &kp K      &kp L    &kp SEMI  &ht LGUI SQT
                &ht LSHFT MINUS  &kp Z   &kp X  &kp C  &kp V  &kp B        &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &tog GAME
                            &ht LCTRL ESC  &lt NUM TAB  &lt SYM SPACE    &lt FUNC ENTER  &lt NAV BSPC  &lt RALT DEL
                >;
        };

        nav_layer {
            bindings = <
                       &none     &none     &none      &none      &none        &none         &none     &kp PG_DN  &kp PG_UP  &none
                &none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &kp G        &kp LA(UP)    &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp INS
                &none  &none     &none     &none      &none      &none        &kp LA(DOWN)  &kp HOME  &kp END    &none      &none      &none
                                                     &none  &none  &none    &none  &trans  &none
                >;
        };

        number_layer {
            bindings = <
                           &kp BSLH   &kp N7  &kp N8  &kp N9  &kp N0          &none  &none      &none      &none     &none
                &kp LCTRL  &kp COMMA  &kp N4  &kp N5  &kp N6  &kp LBKT        &none  &kp RSHFT  &kp RCTRL  &kp LALT  &kp RGUI  &none
                &kp DEL    &kp DOT    &kp N1  &kp N2  &kp N3  &kp RBKT        &none  &none      &none      &none     &none     &none
                                                &kp GRAVE  &trans  &none    &none  &none  &none
                >;
        };

        symbol_layer {
            bindings = <
                           &kp PIPE  &kp AMPS  &kp STAR   &kp LPAR   &kp RPAR        &none  &none      &none      &none     &none
                &kp LCTRL  &kp LT    &kp DLLR  &kp PRCNT  &kp CARET  &kp LBRC        &none  &kp RSHFT  &kp RCTRL  &kp LALT  &kp RGUI  &none
                &kp BSPC   &kp GT    &kp EXCL  &kp AT     &kp HASH   &kp RBRC        &none  &none      &none      &none     &none     &none
                                                   &kp TILDE  &tog GAME  &trans    &none  &none  &none
                >;
        };

        function_layer {
            bindings = <
                           &kp F12  &kp F7  &kp F8  &kp F9  &kp PSCRN              &bt BT_CLR  &none      &bt BT_NXT  &none     &none
                &kp LCTRL  &kp F11  &kp F4  &kp F5  &kp F6  &kp PAUSE_BREAK        &none       &kp RSHFT  &kp RCTRL   &kp LALT  &kp RGUI  &none
                &kp ENTER  &kp F10  &kp F1  &kp F2  &kp F3  &kp CAPS               &none       &none      &none       &none     &none     &none
                                                 &trans  &kp C_NEXT  &kp C_PP    &trans  &none  &none
                >;
        };

    };
};